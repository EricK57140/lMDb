/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.tennis;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Utilisateur
 */
public class joueurs extends javax.swing.JFrame {
 Connection con;
    PreparedStatement pst;
    ResultSet rs;
    DefaultTableModel model;
     DefaultTableModel model2;
     DefaultTableModel model3;
    /**
     * Creates new form joueurs
     */
    public joueurs() {
        initComponents();
   model = (DefaultTableModel)jTable1.getModel();
        TableJoueur();
    model2 = (DefaultTableModel)jTableTournois.getModel();
        TableTournois();
   model3 = (DefaultTableModel)jTableMatchs.getModel();
        TableMatchs();
        selectionAnnee();
        selectionTournoi();
       
        
    }
        
  private void TableJoueur() {
        String [] joueur = {"ID","NOM","PRENOM","SEXE"};
        String [] afficher = new String[5];
       DefaultTableModel model = new DefaultTableModel(null,joueur);
        String sql = "select * from joueur";
        try {
           Class.forName("com.mysql.cj.jdbc.Driver");
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
             Statement st = con.createStatement();
             rs = st.executeQuery(sql);
             
             while(rs.next()){
                 afficher[0] = rs.getString("id");
                 afficher[1] = rs.getString("nom");
                 afficher[2]= rs.getString("prenom");
                 afficher[3] = rs.getString("SEXE");
                
                 model.addRow(afficher);
                 
             }
             jTable1.setModel(model);
             con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
    }
  
     public void TableJoueurRecherche(String valeur){
        String [] joueur = {"ID","NOM","PRENOM","sexe"};
        String [] afficher = new String[6];
        DefaultTableModel model = new DefaultTableModel(null,joueur);
        String sql = "select ID,NOM,PRENOM,SEXE from joueur where nom like'%" + valeur +"%' or prenom like'%" + valeur +"%' or sexe like'%" + valeur +"%' "
                + "or id like '%" + valeur +"%'";
        try {
           Class.forName("com.mysql.cj.jdbc.Driver");
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
             Statement st = con.createStatement();
             rs = st.executeQuery(sql);
             
             while(rs.next()){
                 afficher[0] = rs.getString("id");
                 afficher[1] = rs.getString("nom");
                 afficher[2] = rs.getString("prenom");
                 afficher[3] = rs.getString("sexe");
               
                 model.addRow(afficher);
                 
             }
             jTable1.setModel(model);
             con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelJoueurs = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txnom = new javax.swing.JTextField();
        txtprenom = new javax.swing.JTextField();
        txtsexe = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnAjouter = new javax.swing.JButton();
        btnSupprimer = new javax.swing.JButton();
        btnModifier = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtrecherche = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        cbSexe = new javax.swing.JComboBox<>();
        jPanelTournoi = new javax.swing.JPanel();
        btnAjouterTournoi = new javax.swing.JButton();
        btnSupprimerTournoi = new javax.swing.JButton();
        btnModifierTournoi = new javax.swing.JButton();
        txtIdTournoi = new javax.swing.JTextField();
        txtNomTournoi = new javax.swing.JTextField();
        txtCodeTournoi = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtrechercheTournois = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableTournois = new javax.swing.JTable();
        jPanelMatchs = new javax.swing.JPanel();
        cbVainFin = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtrechercheMatchs = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableMatchs = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        cbEpreuvesAnnee = new javax.swing.JComboBox<>();
        cbEpreuvesNom = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableEpreuves = new javax.swing.JTable();
        jButtonRechercheEpreuves = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setText("NOM");

        jLabel2.setText("PRENOM");

        jLabel3.setText("SEXE");

        txnom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txnomActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOM", "PRENOM", "SEXE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(240, 240, 240));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnAjouter.setText("AJOUTER");
        btnAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterActionPerformed(evt);
            }
        });

        btnSupprimer.setText("SUPPRIMER");
        btnSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimerActionPerformed(evt);
            }
        });

        btnModifier.setText("MODIFIER");
        btnModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierActionPerformed(evt);
            }
        });

        jLabel4.setText("RECHERCHER");

        txtrecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrechercheActionPerformed(evt);
            }
        });
        txtrecherche.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtrechercheKeyReleased(evt);
            }
        });

        jLabel5.setText("ID");

        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });

        jButton1.setText("Actualiser");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cbSexe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tous", "Femme", "Homme" }));
        cbSexe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSexeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelJoueursLayout = new javax.swing.GroupLayout(jPanelJoueurs);
        jPanelJoueurs.setLayout(jPanelJoueursLayout);
        jPanelJoueursLayout.setHorizontalGroup(
            jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 714, Short.MAX_VALUE)
            .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelJoueursLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelJoueursLayout.createSequentialGroup()
                            .addGap(74, 74, 74)
                            .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanelJoueursLayout.createSequentialGroup()
                                    .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(35, 35, 35)
                                    .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtsexe)
                                                .addComponent(txtprenom, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txnom, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(txtid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                            .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnAjouter)
                                .addComponent(btnSupprimer)
                                .addComponent(btnModifier))
                            .addGap(55, 57, Short.MAX_VALUE)
                            .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbSexe, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(70, 70, 70))
                        .addGroup(jPanelJoueursLayout.createSequentialGroup()
                            .addGap(37, 37, 37)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(61, 61, 61)
                            .addComponent(txtrecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        jPanelJoueursLayout.setVerticalGroup(
            jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 693, Short.MAX_VALUE)
            .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelJoueursLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAjouter)
                        .addComponent(jLabel5)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1))
                    .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelJoueursLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(txnom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(txtprenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanelJoueursLayout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnSupprimer)
                                .addComponent(cbSexe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelJoueursLayout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(txtsexe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanelJoueursLayout.createSequentialGroup()
                            .addGap(15, 15, 15)
                            .addComponent(btnModifier)))
                    .addGap(24, 24, 24)
                    .addGroup(jPanelJoueursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtrecherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 197, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        jTabbedPane1.addTab("JOUEUR", jPanelJoueurs);

        btnAjouterTournoi.setText("AJOUTER");
        btnAjouterTournoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterTournoiActionPerformed(evt);
            }
        });

        btnSupprimerTournoi.setText("SUPPRIMER");
        btnSupprimerTournoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimerTournoiActionPerformed(evt);
            }
        });

        btnModifierTournoi.setText("MODIFIER");
        btnModifierTournoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierTournoiActionPerformed(evt);
            }
        });

        txtIdTournoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdTournoiActionPerformed(evt);
            }
        });

        txtNomTournoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomTournoiActionPerformed(evt);
            }
        });

        txtCodeTournoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodeTournoiActionPerformed(evt);
            }
        });

        jLabel6.setText("ID TOURNOI");

        jLabel7.setText("CODE TOURNOI");

        jLabel8.setText("NOM TOURNOI");

        jLabel9.setText("RECHERCHER");

        txtrechercheTournois.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrechercheTournoisActionPerformed(evt);
            }
        });
        txtrechercheTournois.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtrechercheTournoisKeyReleased(evt);
            }
        });

        jTableTournois.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID TOURNOI", "NOM TOURNOI", "CODE TOURNOI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableTournois.setGridColor(new java.awt.Color(240, 240, 240));
        jTableTournois.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableTournoisMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTableTournois);

        javax.swing.GroupLayout jPanelTournoiLayout = new javax.swing.GroupLayout(jPanelTournoi);
        jPanelTournoi.setLayout(jPanelTournoiLayout);
        jPanelTournoiLayout.setHorizontalGroup(
            jPanelTournoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTournoiLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanelTournoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTournoiLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtrechercheTournois, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelTournoiLayout.createSequentialGroup()
                        .addGroup(jPanelTournoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelTournoiLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCodeTournoi, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTournoiLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(56, 56, 56)
                                .addComponent(txtIdTournoi))
                            .addGroup(jPanelTournoiLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(txtNomTournoi, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(105, 105, 105)
                        .addGroup(jPanelTournoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnModifierTournoi)
                            .addComponent(btnSupprimerTournoi)
                            .addComponent(btnAjouterTournoi))
                        .addGap(194, 194, 194))))
            .addComponent(jScrollPane2)
        );
        jPanelTournoiLayout.setVerticalGroup(
            jPanelTournoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTournoiLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanelTournoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAjouterTournoi)
                    .addComponent(txtIdTournoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTournoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSupprimerTournoi)
                    .addComponent(txtNomTournoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTournoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModifierTournoi)
                    .addComponent(txtCodeTournoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(57, 57, 57)
                .addGroup(jPanelTournoiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtrechercheTournois, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("TOURNOIS", jPanelTournoi);

        cbVainFin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tous", "vainqueur", "finaliste" }));
        cbVainFin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbVainFinActionPerformed(evt);
            }
        });

        jLabel10.setText("RECHERCHER");

        txtrechercheMatchs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrechercheMatchsActionPerformed(evt);
            }
        });
        txtrechercheMatchs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtrechercheMatchsKeyReleased(evt);
            }
        });

        jTableMatchs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ANNEE", "TOURNOI", "NOM", "PRENOM", "SEXE "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableMatchs.setGridColor(new java.awt.Color(240, 240, 240));
        jTableMatchs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableMatchsMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTableMatchs);
        if (jTableMatchs.getColumnModel().getColumnCount() > 0) {
            jTableMatchs.getColumnModel().getColumn(0).setHeaderValue("ANNEE");
            jTableMatchs.getColumnModel().getColumn(1).setHeaderValue("TOURNOI");
            jTableMatchs.getColumnModel().getColumn(4).setHeaderValue("SEXE ");
        }

        javax.swing.GroupLayout jPanelMatchsLayout = new javax.swing.GroupLayout(jPanelMatchs);
        jPanelMatchs.setLayout(jPanelMatchsLayout);
        jPanelMatchsLayout.setHorizontalGroup(
            jPanelMatchsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMatchsLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanelMatchsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMatchsLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(txtrechercheMatchs, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbVainFin, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelMatchsLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelMatchsLayout.setVerticalGroup(
            jPanelMatchsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMatchsLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(cbVainFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(jPanelMatchsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtrechercheMatchs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jTabbedPane1.addTab("MATCHS", jPanelMatchs);

        cbEpreuvesAnnee.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cbEpreuvesAnnee.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choisir année" }));
        cbEpreuvesAnnee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEpreuvesAnneeActionPerformed(evt);
            }
        });

        cbEpreuvesNom.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cbEpreuvesNom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choisir Tournoi" }));
        cbEpreuvesNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEpreuvesNomActionPerformed(evt);
            }
        });

        jTableEpreuves.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOM", "PRENOM"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEpreuves.setGridColor(new java.awt.Color(240, 240, 240));
        jTableEpreuves.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableEpreuvesMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(jTableEpreuves);

        jButtonRechercheEpreuves.setText("Rechercher");
        jButtonRechercheEpreuves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRechercheEpreuvesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(cbEpreuvesAnnee, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbEpreuvesNom, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addComponent(jButtonRechercheEpreuves, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbEpreuvesNom, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEpreuvesAnnee, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addComponent(jButtonRechercheEpreuves, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        jTabbedPane1.addTab("EPREUVES", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(230, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbSexeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSexeActionPerformed
        int categorie = cbSexe.getSelectedIndex();

        String [] joueur = {"ID","NOM","PRENOM","sexe"};
        String [] afficher = new String[6];
        DefaultTableModel model = new DefaultTableModel(null,joueur);
        switch(categorie)

        {
            case 0:
            String sql2 = "select * from joueur ";
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
                Statement st = con.createStatement();
                rs = st.executeQuery(sql2);

                while(rs.next()){
                    afficher[0] = rs.getString("id");
                    afficher[1] = rs.getString("nom");
                    afficher[2] = rs.getString("prenom");
                    afficher[3] = rs.getString("sexe");

                    model.addRow(afficher);

                }
                jTable1.setModel(model);
                con.close();
            }catch(Exception e){
                e.printStackTrace();
            }

            break;

            case 1:
            String sql = "select * from joueur where sexe = 'f' ";
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
                Statement st = con.createStatement();
                rs = st.executeQuery(sql);

                while(rs.next()){
                    afficher[0] = rs.getString("id");
                    afficher[1] = rs.getString("nom");
                    afficher[2] = rs.getString("prenom");
                    afficher[3] = rs.getString("sexe");

                    model.addRow(afficher);

                }
                jTable1.setModel(model);
                con.close();
            }catch(Exception e){
                e.printStackTrace();
            }
            break;
            case 2:

            String sql1 = "select * from joueur where sexe = 'H' ";
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
                Statement st = con.createStatement();
                rs = st.executeQuery(sql1);

                while(rs.next()){
                    afficher[0] = rs.getString("id");
                    afficher[1] = rs.getString("nom");
                    afficher[2] = rs.getString("prenom");
                    afficher[3] = rs.getString("sexe");

                    model.addRow(afficher);

                }
                jTable1.setModel(model);
                con.close();
            }catch(Exception e){
                e.printStackTrace();
            }
            break;
        }
    }//GEN-LAST:event_cbSexeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        TableJoueur();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidActionPerformed

    private void txtrechercheKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrechercheKeyReleased
        TableJoueurRecherche(txtrecherche.getText());
    }//GEN-LAST:event_txtrechercheKeyReleased

    private void btnModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierActionPerformed
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
            String sql = "update joueur set nom=?,prenom=?,sexe=? where id = ?";
            pst = con.prepareStatement(sql);
            pst.setString(4,txtid.getText());
            pst.setString(1,txnom.getText());
            pst.setString(2,txtprenom.getText());
            pst.setString(3,txtsexe.getText());
            pst.executeUpdate();
            con.close();
            JOptionPane.showMessageDialog(null,"modification réussi");
            TableJoueur();
        }catch(Exception e){
            e.printStackTrace();
        }// TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_btnModifierActionPerformed

    private void btnSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimerActionPerformed
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
            String sql = "delete from joueur where id =?";
            pst = con.prepareStatement(sql);
            pst.setString(1,txtid.getText());
          
            pst.executeUpdate();
            con.close();

            JOptionPane.showMessageDialog(null,"suprression réussie");
            TableJoueur();
            //TableJoueur();
        }catch(Exception e){
            e.printStackTrace();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnSupprimerActionPerformed

    private void btnAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterActionPerformed
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
            String sql = "insert into joueur (nom,prenom,sexe)values(?,?,?)";
            pst = con.prepareStatement(sql);
            pst.setString(1,txnom.getText());
            pst.setString(2,txtprenom.getText());
            pst.setString(3,txtsexe.getText());

            pst.executeUpdate();
            con.close();

            JOptionPane.showMessageDialog(null,"enregistrement réussi");
            TableJoueur();
            //TableJoueur();
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAjouterActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        int i = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        txtid.setText(model.getValueAt(i,0).toString());
        txnom.setText(model.getValueAt(i,1).toString());
        txtprenom.setText(model.getValueAt(i,2).toString());
        txtsexe.setText(model.getValueAt(i,3).toString());
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseReleased

    private void txnomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txnomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txnomActionPerformed

    private void btnAjouterTournoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterTournoiActionPerformed
          try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
            String sql = "insert into tournoi (nom,code)values(?,?)";
            pst = con.prepareStatement(sql);
            pst.setString(1,txtNomTournoi.getText());
            pst.setString(2,txtCodeTournoi.getText());
   

            pst.executeUpdate();
            con.close();

            JOptionPane.showMessageDialog(null,"enregistrement réussi");
            TableTournois();
         
        }catch(Exception e){
            e.printStackTrace();
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnAjouterTournoiActionPerformed

    private void btnSupprimerTournoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimerTournoiActionPerformed
       try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
            String sql = "delete from tournoi where id =? ";
            pst = con.prepareStatement(sql);
            pst.setString(1,txtIdTournoi.getText());
          
            pst.executeUpdate();
            con.close();

            JOptionPane.showMessageDialog(null,"suprression réussie");
            TableTournois();
       
        }catch(Exception e){
            e.printStackTrace();
        }        // TODO add your handl
    }//GEN-LAST:event_btnSupprimerTournoiActionPerformed

    private void btnModifierTournoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierTournoiActionPerformed
          try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
            String sql = "update tournoi set nom=?,code=? where id = ?";
            pst = con.prepareStatement(sql);
            pst.setString(3,txtIdTournoi.getText());
            pst.setString(1,txtNomTournoi.getText());
            pst.setString(2,txtCodeTournoi.getText());
         
            pst.executeUpdate();
            con.close();
            JOptionPane.showMessageDialog(null,"modification réussi");
              TableTournois();
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnModifierTournoiActionPerformed

    private void txtIdTournoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdTournoiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdTournoiActionPerformed

    private void txtNomTournoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomTournoiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomTournoiActionPerformed

    private void txtCodeTournoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodeTournoiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodeTournoiActionPerformed

    private void txtrechercheTournoisKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrechercheTournoisKeyReleased
        TableTournoisRecherche(txtrechercheTournois.getText());
    }//GEN-LAST:event_txtrechercheTournoisKeyReleased

    private void jTableTournoisMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTournoisMouseReleased
        int i = jTableTournois.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)jTableTournois.getModel();
        txtIdTournoi.setText(model.getValueAt(i,0).toString());
        txtNomTournoi.setText(model.getValueAt(i,1).toString());
        txtCodeTournoi.setText(model.getValueAt(i,2).toString());
        
    }//GEN-LAST:event_jTableTournoisMouseReleased

    private void jTableMatchsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMatchsMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableMatchsMouseReleased

    private void cbVainFinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbVainFinActionPerformed
         int categorie = cbVainFin.getSelectedIndex();

        String [] matchs = {"ANNEE","TOURNOI","NOM","PRENOM","SEXE"};
        String [] afficher = new String[6];
        DefaultTableModel model = new DefaultTableModel(null,matchs);
        switch(categorie)

        {
       case 0:
            String sql0 = "SELECT joueur.`NOM`,prenom,sexe,tournoi.`NOM`, epreuve.`ANNEE` from joueur,match_tennis,tournoi,epreuve "
                + "where (joueur.id= match_tennis.ID_VAINQUEUR or joueur.`ID`=match_tennis.`ID_FINALISTE`) and tournoi.`ID`=epreuve.`ID_TOURNOI` and epreuve.`ID`= match_tennis.`ID_EPREUVE`";
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
                Statement st = con.createStatement();
                rs = st.executeQuery(sql0);

                   while(rs.next()){
                afficher[0] = rs.getString("epreuve.annee");
                afficher[1] = rs.getString("tournoi.nom");
                 afficher[2] = rs.getString("joueur.nom");
                 afficher[3]= rs.getString("prenom");
                 afficher[4] = rs.getString("SEXE");
                

                    model.addRow(afficher);

                }
                jTableMatchs.setModel(model);
                con.close();
            }catch(Exception e){
                e.printStackTrace();
            }
            break;

            case 1:
            String sql = "SELECT joueur.`NOM`,prenom,sexe,tournoi.`NOM`, epreuve.`ANNEE` "
                        + "from joueur,match_tennis,tournoi,epreuve where joueur.`ID` = match_tennis.`ID_VAINQUEUR` "                   
                        + "and tournoi.`ID`=epreuve.`ID_TOURNOI` and epreuve.`ID`= match_tennis.`ID_EPREUVE` ";
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
                Statement st = con.createStatement();
                rs = st.executeQuery(sql);

                   while(rs.next()){
                afficher[0] = rs.getString("epreuve.annee");
                afficher[1] = rs.getString("tournoi.nom");
                 afficher[2] = rs.getString("joueur.nom");
                 afficher[3]= rs.getString("prenom");
                 afficher[4] = rs.getString("SEXE");
                

                    model.addRow(afficher);

                }
                jTableMatchs.setModel(model);
                con.close();
            }catch(Exception e){
                e.printStackTrace();
            }
            break;
            case 2:

            String sql1 = "SELECT joueur.`NOM`,prenom,sexe,tournoi.`NOM`, epreuve.`ANNEE` "
                    + "from joueur,match_tennis,tournoi,epreuve where joueur.`ID` = match_tennis.`ID_FINALISTE` "
                    + "and tournoi.`ID`=epreuve.`ID_TOURNOI` and epreuve.`ID`= match_tennis.`ID_EPREUVE`";
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
                Statement st = con.createStatement();
                rs = st.executeQuery(sql1);

                   while(rs.next()){
                afficher[0] = rs.getString("epreuve.annee");
                afficher[1] = rs.getString("tournoi.nom");
                 afficher[2] = rs.getString("joueur.nom");
                 afficher[3]= rs.getString("prenom");
                 afficher[4] = rs.getString("SEXE");
                
                    model.addRow(afficher);

                }
                jTableMatchs.setModel(model);
                con.close();
            }catch(Exception e){
                e.printStackTrace();
            }
            break;
        }
    }//GEN-LAST:event_cbVainFinActionPerformed

    private void txtrechercheTournoisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrechercheTournoisActionPerformed
                 
    }//GEN-LAST:event_txtrechercheTournoisActionPerformed

    private void txtrechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrechercheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrechercheActionPerformed

    private void txtrechercheMatchsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrechercheMatchsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrechercheMatchsActionPerformed

    private void txtrechercheMatchsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtrechercheMatchsKeyReleased
        TableMatchsRecherche(txtrechercheMatchs.getText());
    }//GEN-LAST:event_txtrechercheMatchsKeyReleased

    private void cbEpreuvesAnneeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEpreuvesAnneeActionPerformed
           
    }//GEN-LAST:event_cbEpreuvesAnneeActionPerformed

    private void cbEpreuvesNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEpreuvesNomActionPerformed
      
    }//GEN-LAST:event_cbEpreuvesNomActionPerformed

    private void jTableEpreuvesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableEpreuvesMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableEpreuvesMouseReleased

    private void jButtonRechercheEpreuvesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRechercheEpreuvesActionPerformed

        TableEpreuve(cbEpreuvesAnnee.getSelectedItem().toString(),cbEpreuvesNom.getSelectedItem().toString()); 

    }//GEN-LAST:event_jButtonRechercheEpreuvesActionPerformed

    /**
     * @param args the command line argumentsSS
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(joueurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(joueurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(joueurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(joueurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new joueurs().setVisible(true);
            }
        });
    }
    
   
    //TOURNOIS
    private void TableTournois() {
        String [] tournoi = {"ID","NOM","CODE"};
        String [] afficher = new String[4];
       DefaultTableModel model2 = new DefaultTableModel(null,tournoi);
        String sql = "select * from TOURNOI";
        try {
           Class.forName("com.mysql.cj.jdbc.Driver");
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
             Statement st = con.createStatement();
             rs = st.executeQuery(sql);
             
             while(rs.next()){
                 afficher[0] = rs.getString("id");
                 afficher[1] = rs.getString("nom");
                 afficher[2]= rs.getString("CODE");
              
                
                 model2.addRow(afficher);
                 
             }
             jTableTournois.setModel(model2);
             con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
     public void TableTournoisRecherche(String valeur){
        String [] tournoi = {"ID","NOM","CODE"};
        String [] afficher = new String[3];
        DefaultTableModel model = new DefaultTableModel(null,tournoi);
        String sql = "select ID,NOM,CODE from tournoi where nom like'%" + valeur +"%' or id like'%" + valeur +"%' or code like'%" + valeur +"%' ";
               
        try {
           Class.forName("com.mysql.cj.jdbc.Driver");
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
             Statement st = con.createStatement();
             rs = st.executeQuery(sql);
             
             while(rs.next()){
                 afficher[0] = rs.getString("id");
                 afficher[1] = rs.getString("nom");
                 afficher[2] = rs.getString("code");
              
               
                 model.addRow(afficher);
                 
             }
             jTableTournois.setModel(model);
             con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    
    
    
    
    public void TableMatchs(){
        String [] matchs = {"ANNEE","TOURNOI","NOM","PRENOM","SEXE"};
        String [] afficher = new String[5];
       DefaultTableModel model5 = new DefaultTableModel(null,matchs);
        String sql5 = "SELECT joueur.`NOM`,prenom,sexe,tournoi.`NOM`, epreuve.`ANNEE` from joueur,match_tennis,tournoi,epreuve "
                + "where (joueur.id= match_tennis.ID_VAINQUEUR or joueur.`ID`=match_tennis.`ID_FINALISTE`) and tournoi.`ID`=epreuve.`ID_TOURNOI` and epreuve.`ID`= match_tennis.`ID_EPREUVE`";
        try {
           Class.forName("com.mysql.cj.jdbc.Driver");
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
             Statement st = con.createStatement();
             rs = st.executeQuery(sql5);
             
             while(rs.next()){
                afficher[0] = rs.getString("epreuve.annee");
                afficher[1] = rs.getString("tournoi.nom");
                 afficher[2] = rs.getString("joueur.nom");
                 afficher[3]= rs.getString("prenom");
                 afficher[4] = rs.getString("SEXE");
                
                 model5.addRow(afficher);
                 
             }
             jTableMatchs.setModel(model5);
             con.close();
        }catch(Exception e){
            e.printStackTrace();
        }  
    }
      public void TableMatchsRecherche(String valeur){
        String [] matchs = {"ANNEE","TOURNOI","NOM","PRENOM","SEXE"};
        String [] afficher = new String[5];
        DefaultTableModel model = new DefaultTableModel(null,matchs);
       
        String sql ="SELECT joueur.`NOM`,prenom,sexe,tournoi.`NOM`, epreuve.`ANNEE` from joueur,match_tennis,tournoi,epreuve "
                + "where (joueur.id= match_tennis.ID_VAINQUEUR or joueur.`ID`=match_tennis.`ID_FINALISTE`) "
                + "and tournoi.`ID`=epreuve.`ID_TOURNOI` and epreuve.`ID`= match_tennis.`ID_EPREUVE`"
                + "and (joueur.nom like '%"+valeur+"%' or joueur.prenom like '%"+valeur+"%')";
                       
        try {
           Class.forName("com.mysql.cj.jdbc.Driver");
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
             Statement st = con.createStatement();
             rs = st.executeQuery(sql);
             
             while(rs.next()){
                afficher[0] = rs.getString("epreuve.annee");
                afficher[1] = rs.getString("tournoi.nom");
                 afficher[2] = rs.getString("joueur.nom");
                 afficher[3]= rs.getString("joueur.prenom");
                 afficher[4] = rs.getString("joueur.sexe");
              
               
                 model.addRow(afficher);
                 
             }
             jTableMatchs.setModel(model);
             con.close();
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
    public void selectionAnnee(){
        String sql="select ANNEE from epreuve";
         try {
           Class.forName("com.mysql.cj.jdbc.Driver");
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
             Statement st = con.createStatement();
             rs = st.executeQuery(sql);
             
             while(rs.next()){
                 
                 cbEpreuvesAnnee.addItem(rs.getString("ANNEE"));
                 
             }}
             catch(Exception e){
                e.printStackTrace();
        }
        
    }

     public void selectionTournoi(){
         
        String sql="select nom from tournoi";
         try {
           Class.forName("com.mysql.cj.jdbc.Driver");
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
             Statement st = con.createStatement();
             rs = st.executeQuery(sql);
             
             while(rs.next()){
                 
                 cbEpreuvesNom.addItem(rs.getString("nom"));
              
             }}
             catch(Exception e){
                e.printStackTrace();
        }
    
    }
  
    public void TableEpreuve(String epreuveAnnee,String epreuveNom){
      
        String [] epreuve = {"NOM","PRENOM"};
        String [] afficher = new String[2];
       DefaultTableModel model = new DefaultTableModel(null,epreuve);
        String sql = "SELECT joueur.`NOM`,prenom  from joueur,match_tennis,tournoi,epreuve \n" +
"where (joueur.id= match_tennis.ID_VAINQUEUR or joueur.`ID`=match_tennis.`ID_FINALISTE`) \n" +
"and tournoi.`ID`=epreuve.`ID_TOURNOI` and epreuve.`ID`= match_tennis.`ID_EPREUVE`\n" +
"and epreuve.annee =' "+epreuveAnnee+"' and tournoi.nom = '"+epreuveNom+"'";
        try {
           Class.forName("com.mysql.cj.jdbc.Driver");
             con = DriverManager.getConnection("jdbc:mysql://localhost:3306/tennis?zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=UTC","root","");
             Statement st = con.createStatement();
             rs = st.executeQuery(sql);
             
             while(rs.next()){
                afficher[0] = rs.getString("joueur.nom");
                afficher[1] = rs.getString("joueur.prenom");
              
                 model.addRow(afficher);
                 
             }
             jTableEpreuves.setModel(model);
             con.close();
        }catch(Exception e){
            e.printStackTrace();
        }  
    }     


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjouter;
    private javax.swing.JButton btnAjouterTournoi;
    private javax.swing.JButton btnModifier;
    private javax.swing.JButton btnModifierTournoi;
    private javax.swing.JButton btnSupprimer;
    private javax.swing.JButton btnSupprimerTournoi;
    private javax.swing.JComboBox<String> cbEpreuvesAnnee;
    private javax.swing.JComboBox<String> cbEpreuvesNom;
    private javax.swing.JComboBox<String> cbSexe;
    private javax.swing.JComboBox<String> cbVainFin;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonRechercheEpreuves;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelJoueurs;
    private javax.swing.JPanel jPanelMatchs;
    private javax.swing.JPanel jPanelTournoi;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableEpreuves;
    private javax.swing.JTable jTableMatchs;
    private javax.swing.JTable jTableTournois;
    private javax.swing.JTextField txnom;
    private javax.swing.JTextField txtCodeTournoi;
    private javax.swing.JTextField txtIdTournoi;
    private javax.swing.JTextField txtNomTournoi;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtprenom;
    private javax.swing.JTextField txtrecherche;
    private javax.swing.JTextField txtrechercheMatchs;
    private javax.swing.JTextField txtrechercheTournois;
    private javax.swing.JTextField txtsexe;
    // End of variables declaration//GEN-END:variables
}
